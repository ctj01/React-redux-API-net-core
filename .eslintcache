[{"/home/holberton/Documents/React/api/src/index.js":"1","/home/holberton/Documents/React/api/src/App.js":"2","/home/holberton/Documents/React/api/src/reportWebVitals.js":"3","/home/holberton/Documents/React/api/src/Reducers/Store.js":"4","/home/holberton/Documents/React/api/src/Reducers/PostReducer.js":"5","/home/holberton/Documents/React/api/src/Apis/Api.js":"6","/home/holberton/Documents/React/api/src/componentes/Agregar.js":"7"},{"size":572,"mtime":1608999037125,"results":"8","hashOfConfig":"9"},{"size":962,"mtime":1609619273911,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608941128763,"results":"11","hashOfConfig":"9"},{"size":264,"mtime":1609001014028,"results":"12","hashOfConfig":"9"},{"size":2010,"mtime":1609001940056,"results":"13","hashOfConfig":"9"},{"size":1053,"mtime":1609164552135,"results":"14","hashOfConfig":"9"},{"size":1859,"mtime":1609508850866,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"91xe2k",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/holberton/Documents/React/api/src/index.js",[],["33","34"],"/home/holberton/Documents/React/api/src/App.js",["35"],"/home/holberton/Documents/React/api/src/reportWebVitals.js",[],"/home/holberton/Documents/React/api/src/Reducers/Store.js",[],"/home/holberton/Documents/React/api/src/Reducers/PostReducer.js",["36"],"import {apiGet, apiAddPost, apiUpdatePost, apiDeletePost} from  '../Apis/Api'\n\n//estado inicial\nconst initialState = {\n\n    posts : []\n\n}\n// TIPOS DE ACCIONES\nconst GET_POSTS= 'GET_POSTS'\nconst ADD_POSTS = 'ADD_POSTS'\nconst UPDATE_POSTS = 'UPDATE_POSTS'\nconst DELETE_POSTS = 'DELETE_POSTS'\n\n//acciones\n\nconst getPosts = (posts) => ({type: GET_POSTS, payload: posts})\nconst addPosts = (posts) => ({type: ADD_POSTS, payload: posts})\nconst updatePosts = (posts) => ({type: UPDATE_POSTS, payload: posts})\nconst deletePosts = (id) => ({type: DELETE_POSTS, payload: id})\n\nexport const fetchGetPost = () => {\n    return(dispatch) => {\n        apiGet().then(post => {\n            dispatch(getPosts(post))\n        }).catch(err => console.log(err))\n    }\n}\nexport const fetchAddPost = (post) => {\n    return (dispatch) => {\n        apiAddPost(post).then(post => {\n            dispatch(addPosts(post))\n        }).catch(err => console.log(err))\n    }\n}\nexport const fetchUpdatePost = (id, post) => {\n\n    return (dispatch) => {\n        apiUpdatePost(id, post).then(post => {\n            dispatch(updatePosts(post))\n        }).catch(err => console.log(err))\n    }\n    \n}\n\nexport const fetchDeletePost = (id) => {\n    return (dispatch) => {\n        apiDeletePost(id).then(post => {\n            dispatch(deletePosts(id))\n        }).catch(err => console.log(err))\n    }\n    \n}\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) \n    {\n        case GET_POSTS : return {\n        ...state, posts: action.payload }\n        case ADD_POSTS: return {\n            ...state, posts: [action.payload, state.posts]\n        }\n        case UPDATE_POSTS : return {\n            ...state,\n            posts : state.posts.map(post =>  \n                post.id === action.payload.id ? action.payload : post         )\n        }\n        case DELETE_POSTS : return {\n            ...state,\n            posts : [...state.posts.filter(post => post.id !== action.payload)]\n        }\n        default: return {...state}\n    }\n}","/home/holberton/Documents/React/api/src/Apis/Api.js",[],"/home/holberton/Documents/React/api/src/componentes/Agregar.js",["37"],"import {Avatar, Button, Container, Grid, makeStyles, TextField, Typography } from '@material-ui/core'\nimport FaceIcon from '@material-ui/icons/Face';\nconst styles = makeStyles({\n    label: {\n        margin: '10px'\n    },\n    logo:{\n        color: '#11698e',\n        fontSize: '100px'\n    },\n    grid:{\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    form:{\n        width: '100%'\n    },\n    submit:{\n        background: '#11698e',\n        color: 'white',\n        marginLeft: '10px'\n    }\n})\n\n\nconst Agregar  = () => {\n\n    const classes = styles()\n\nreturn(\n<Container component={\"main\"} maxWidth={\"xs\"}>\n    <div className={classes.grid}>\n         <FaceIcon className={classes.logo}/>\n         <Typography variant=\"h5\">Agregar Usuario</Typography>  \n            <form className={classes.form}>\n                <Grid>\n                    <Grid item>\n                        <TextField name=\"name\" \n                        variant=\"outlined\"\n                        label=\"Ingrese su nombre\" className={classes.label} \n                        fullWidth>\n                        </TextField>\n                    </Grid>\n                    <Grid item>\n                        <TextField fullWidth\n                        className={classes.label} name=\"age\" \n                        variant=\"outlined\"\n                        label=\"Ingrese su edad\">\n                        </TextField>\n                    </Grid>\n                    <Grid item>\n                    <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.submit}\n                    >Registrar\n                    </Button>\n                    </Grid>\n                </Grid>\n            </form>\n    </div>\n\n</Container>\n\n)}\nexport default Agregar;\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":22,"column":11,"nodeType":"44","messageId":"45","endLine":22,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":55,"column":1,"nodeType":"48","endLine":75,"endColumn":2},{"ruleId":"42","severity":1,"message":"49","line":1,"column":9,"nodeType":"44","messageId":"45","endLine":1,"endColumn":15},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation"]